pipeline {
    agent {
        label 'AGENT-1'
    }

    options {
        timeout(time:30, unit:'MINUTES') // set a timeout of 30 minutes for the entire pipeline
        disableConcurrentBuilds() // disable concurrent builds, only one build can run at a time
    }

    environment {
        appVersion = ''
        ACC_ID = '057260092371'
        REGION = 'us-east-1'
        PROJECT = 'roboshop'
        COMPONENT = 'cataloguee'
    }

    stages {
        
         stage('init') { // stage to initialize terraform
            steps {
                script {
                     withAWS(credentials: 'aws-creds', region: '${REGION}') {
                           sh """
                           
                           cd 20-bastion
                           terraform init -reconfigure

                           """
                    }
                }
            }
        }

        stage('plan') { // stage to initialize terraform
            steps {
                script {
                     withAWS(credentials: 'aws-creds', region: '${REGION}') {
                           sh """
                           
                           cd 20-bastion
                           terraform plan

                           """
                    }
                }
            }
        }

        stage('apply') { // stage to initialize terraform
           
            steps {
                script {
                     withAWS(credentials: 'aws-creds', region: '${REGION}') {
                           sh """
                           
                           cd 20-bastion
                           terraform apply -auto-approve

                           """
                    }
                }
            }
        }

       
    }

    post {
        always {
            echo 'Cleaning up...'
            // Add any cleanup steps if necessary
        }
        success {
            echo 'Pipeline completed successfully!'
        }
        failure {
            echo 'Pipeline failed!'
        }
    }
}