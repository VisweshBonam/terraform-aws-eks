pipeline {
    agent {
        label 'AGENT-1'
    }

    options {
        timeout(time:30, unit:'MINUTES') // set a timeout of 30 minutes for the entire pipeline
        disableConcurrentBuilds() // disable concurrent builds, only one build can run at a time
    }

    environment {
        appVersion = ''
        ACC_ID = '057260092371'
        REGION = 'us-east-1'
        PROJECT = 'roboshop'
        COMPONENT = 'cataloguee'
    }

    stages {
        
         stage('init') { // stage to initialize terraform
            steps {
                script {
                     withAWS(credentials: 'aws-creds', region: '${REGION}') {
                           sh """
                           
                           cd 10-sg
                           terraform init -reconfigure

                           """
                    }
                }
            }
        }

        stage('plan') { // stage to initialize terraform
            steps {
                script {
                     withAWS(credentials: 'aws-creds', region: '${REGION}') {
                           sh """
                           
                           cd 10-sg
                           terraform plan

                           """
                    }
                }
            }
        }

        stage('apply') { // stage to initialize terraform
            steps {
                script {
                     withAWS(credentials: 'aws-creds', region: '${REGION}') {
                           sh """
                           
                           cd 10-sg
                           terraform apply -auto-approve

                           """
                    }
                }
            }
        }

        stage('Bastion EKS ACM ALB') {
            parallel {
                 stage('Trigger Bastion Job') {
                    steps {
                        script {
                            build job: '20-bastion',
                            propagate: false,
                            propagate: false,
                        }
                    }
                 }
                //  stage('Downstream EKS Job') {
                //     steps {
                //         script {
                //             build job: '80-eks',
                //             propagate: false,
                //             propagate: false,
                //         }
                //     }
                //  }
                //   stage('Downstream ACM Job') {
                //     steps {
                //         script {
                //             build job: '60-acm',
                //             propagate: false,
                //             propagate: false,
                //         }
                //     }
                //  }
            }
        }

        // stage('Downstream ALB Job') { // stage to initialize terraform
        //     steps {
        //         script {
        //             build job: '70-frontend-alb',
        //             propagate: false,
        //             propagate: false,
        //         }
        //     }
        // }

    post {
        always {
            echo 'Cleaning up...'
            // Add any cleanup steps if necessary
        }
        success {
            echo 'Pipeline completed successfully!'
        }
        failure {
            echo 'Pipeline failed!'
        }
    }
}